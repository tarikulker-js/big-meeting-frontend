{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/linuxOS/ubuntu20-fs/root/projects/big-meeting-frontend/src/components/NewPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { API_URL } from '../config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewPassword() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const {\n    token\n  } = useParams();\n\n  function signinFunc() {\n    toast.warning(\"Şifre değiştiriliyor... Lütfen bekleyiniz.\", {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n    fetch(`${API_URL}/new-password`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password,\n        token\n      })\n    }).then(res => res.json()).then(data => {\n      //axios.post(\"${API_URL}/\", data)\n      console.log(data);\n\n      if (data.error) {\n        toast.error(data.error, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      } else {\n        toast.dark(data.message, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n        setTimeout(function () {\n          window.location = '/signout';\n        }, 2000);\n      }\n    }).catch(err => toast.error(\"Sunucuya bağlanılamadı.\", {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content auth-card input-field\",\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                fontSize: '30px'\n              },\n              children: \"Ulker Social\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Yeni \\u015Eifreniz\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn waves-effect waves-dark\",\n              type: \"submit\",\n              name: \"action\",\n              onClick: e => signinFunc(e),\n              children: \"\\u015Eifreyi Yenile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 3\n  }, this);\n}\n\n_s(NewPassword, \"2TUyGFvqZQ0EvSOSBiNpJpQgRNY=\", false, function () {\n  return [useParams];\n});\n\n_c = NewPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPassword\");","map":{"version":3,"sources":["/data/data/com.termux/files/home/linuxOS/ubuntu20-fs/root/projects/big-meeting-frontend/src/components/NewPassword.js"],"names":["React","useState","Link","useParams","axios","ToastContainer","toast","API_URL","NewPassword","name","setName","password","setPassword","email","setEmail","token","signinFunc","warning","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","error","dark","message","setTimeout","window","location","catch","err","fontSize","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { API_URL } from '../config.json';\n\nexport default function NewPassword(){\n\tconst [name, setName] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [email, setEmail] = useState(\"\");\n\tconst {token} = useParams();\n\t\n\tfunction signinFunc(){\n\t\ttoast.warning(\"Şifre değiştiriliyor... Lütfen bekleyiniz.\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n        });\n\n\t\tfetch(`${API_URL}/new-password`, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tpassword,\n\t\t\t\ttoken\n\t\t\t})\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\t//axios.post(\"${API_URL}/\", data)\n\t\t\t\n\t\t\tconsole.log(data)\n\t\t\t\n\t\t\tif(data.error){\n\t\t\t\ttoast.error(data.error, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n\t\t\t}else{\n\t\t\t\ttoast.dark(data.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\twindow.location='/signout';\n\t\t\t\t}, 2000)\n\t\t\t\t\n\t\t\t}\n\t\t})\n\t\t.catch(err => toast.error(\"Sunucuya bağlanılamadı.\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          }));\n\n\t}\n\t\n\treturn(\n\t\t<div>\n\t\t\t<center>\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<div className=\"card-content auth-card input-field\">\n\t\t\t\t\t\t<center>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<h2 style={{fontSize: '30px'}}>Ulker Social</h2>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tplaceholder='Yeni Şifreniz'\n\t\t\t\t\t\t\t\tvalue={ password }\n\t\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\tclassName=\"btn waves-effect waves-dark\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tname=\"action\"\n\t\t\t\t\t\t\t\tonClick={ (e) => signinFunc(e) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tŞifreyi Yenile\n\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t</center>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</center>\n\n\t\t</div>\n\t)\n}"]},"metadata":{},"sourceType":"module"}