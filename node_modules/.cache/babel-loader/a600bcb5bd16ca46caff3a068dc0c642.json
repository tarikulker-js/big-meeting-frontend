{"ast":null,"code":"var _jsxFileName = \"/root/projects/big-meeting-frontend/src/components/NewPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport M from 'materialize-css';\nimport { API_URL } from '../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewPassword() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const {\n    token\n  } = useParams();\n\n  function signinFunc() {\n    M.toast({\n      html: \"Giriş Yapılıyor... Lütfen Bekleyiniz!\",\n      classes: \"yellow\"\n    });\n    fetch(`${API_URL}/new-password`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password,\n        token\n      })\n    }).then(res => res.json()).then(data => {\n      //axios.post(\"${API_URL}/\", data)\n      console.log(data);\n\n      if (data.error) {\n        M.toast({\n          html: data.error,\n          classes: \"red\"\n        });\n      } else {\n        M.toast({\n          html: data.message,\n          classes: \"green\"\n        });\n        setTimeout(function () {\n          window.location = '/signout';\n        }, 2000);\n      }\n    }).catch(err => M.toast({\n      html: \"Sunucuya Bağlanılamadı. Lütfen internet bağlantınızı kontorl ediniz. \",\n      classes: \"red\"\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content auth-card input-field\",\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                fontSize: '30px'\n              },\n              children: \"Ulker Social\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Yeni \\u015Eifreniz\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn waves-effect waves-dark\",\n              type: \"submit\",\n              name: \"action\",\n              onClick: e => signinFunc(e),\n              children: \"\\u015Eifreyi Yenile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n}\n\n_s(NewPassword, \"2TUyGFvqZQ0EvSOSBiNpJpQgRNY=\", false, function () {\n  return [useParams];\n});\n\n_c = NewPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPassword\");","map":{"version":3,"sources":["/root/projects/big-meeting-frontend/src/components/NewPassword.js"],"names":["React","useState","Link","useParams","axios","M","API_URL","NewPassword","name","setName","password","setPassword","email","setEmail","token","signinFunc","toast","html","classes","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","error","message","setTimeout","window","location","catch","err","fontSize","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport M from 'materialize-css';\nimport { API_URL } from '../../config';\n\nexport default function NewPassword(){\n\tconst [name, setName] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [email, setEmail] = useState(\"\");\n\tconst {token} = useParams();\n\t\n\tfunction signinFunc(){\n\t\tM.toast({html: \"Giriş Yapılıyor... Lütfen Bekleyiniz!\", classes: \"yellow\"})\n\t\t\n\t\tfetch(`${API_URL}/new-password`, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tpassword,\n\t\t\t\ttoken\n\t\t\t})\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\t//axios.post(\"${API_URL}/\", data)\n\t\t\t\n\t\t\tconsole.log(data)\n\t\t\t\n\t\t\tif(data.error){\n\t\t\t\tM.toast({html: data.error, classes: \"red\"})\n\t\t\t}else{\n\t\t\t\tM.toast({html: data.message, classes: \"green\"})\n\t\t\t\t\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\twindow.location='/signout';\n\t\t\t\t}, 2000)\n\t\t\t\t\n\t\t\t}\n\t\t})\n\t\t.catch(err => M.toast({html: \"Sunucuya Bağlanılamadı. Lütfen internet bağlantınızı kontorl ediniz. \", classes: \"red\"}))\n\t\t\n\t}\n\t\n\treturn(\n\t\t<div>\n\t\t\t<center>\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<div className=\"card-content auth-card input-field\">\n\t\t\t\t\t\t<center>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<h2 style={{fontSize: '30px'}}>Ulker Social</h2>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tplaceholder='Yeni Şifreniz'\n\t\t\t\t\t\t\t\tvalue={ password }\n\t\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\tclassName=\"btn waves-effect waves-dark\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tname=\"action\"\n\t\t\t\t\t\t\t\tonClick={ (e) => signinFunc(e) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tŞifreyi Yenile\n\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t</center>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</center>\n\n\t\t</div>\n\t)\n}"]},"metadata":{},"sourceType":"module"}